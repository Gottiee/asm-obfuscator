
NAME = Pestilence

LD = ld
NASM = nasm

SRCS =	$(addsuffix .asm, $(addprefix srcs/, pestilence))

OBJS = ${SRCS:.asm=.o}

all:		$(NAME)	

# .SILENT:
help:
	@echo "Rules:\n\t\
	\e[34mall\e[0m:		compiles and link to create executable \e[32m$(NAME)\e[0m\n\t\
	\e[34mcorrection\e[0m:	compiles and links to create executable $(NAME). Then runs \e[32mverbose.sh\e[0m\n\t\
	\e[34mclean_dumps\e[0m:	clears all dumps file generated by \e[32mverbose.sh\e[0m\n\t\
	\e[34mclean\e[0m: 		removes object files\n\t\
	\e[34mfclean\e[0m:		runs \e[34mclean\e[0m and \e[34mclean_dumps\e[0m. Then removes \e[32m/tmp/test\e[0m and \e[32m$(NAME)\e[0m."

$(NAME):	$(OBJS)
	$(LD)  -o $(NAME) $(OBJS) 

correction:	$(NAME)
	@sh ./verbose.sh

%.o:%.asm
	# $(NASM) -g -f elf64 -i srcs/ $< -o $@
	$(NASM) -f elf64 -i srcs/ $< -o $@

# strife:
# 			nasm -f elf64 -i srcs/strife/ srcs/strife/strife.asm -o srcs/strife/strife.o && ld srcs/strife/strife.o -o Strife

clean:
	@if [ -d $(OBJS) ]; then\
		rm -v $(OBJS);\
	fi

clean_dumps:
	@if [ -f cl_dump ]; then\
		rm -v cl_*;\
	fi
	@if [ -f inf_dump ]; then\
		rm -v inf_*;\
	fi

fclean:		clean	clean_dumps
	@if [ -d /tmp/test ]; then \
		rm -r /tmp/test; \
		echo "removed '\e[4;32m/tmp/test/'\e[0m"; \
	fi
	@if [ -d /tmp/test2 ]; then \
		rm -r /tmp/test2; \
		echo "removed '\e[4;32m/tmp/test2/'\e[0m"; \
	fi
	@if [ -f $(NAME) ]; then \
		rm -v $(NAME); \
	fi
# rm -f Strife
# rm -f srcs/strife/strife.o

re:				fclean all

.PHONY:			all clean fclean re